// =====================================================================================
// Responsive Design System
// =====================================================================================

// Breakpoint Configuration
:root {
  // Standard breakpoints (mobile-first approach)
  --breakpoint-xs: 0px;
  --breakpoint-sm: 600px;
  --breakpoint-md: 960px;
  --breakpoint-lg: 1264px;
  --breakpoint-xl: 1904px;
  --breakpoint-xxl: 2560px;

  // Content width constraints
  --container-max-width-sm: 540px;
  --container-max-width-md: 720px;
  --container-max-width-lg: 960px;
  --container-max-width-xl: 1140px;
  --container-max-width-xxl: 1320px;

  // Touch targets (accessibility)
  --touch-target-min-size: 44px;
  --touch-target-min-spacing: 8px;

  // Fluid typography
  --font-size-base: clamp(0.875rem, 2.5vw, 1rem);
  --font-size-sm: clamp(0.75rem, 2vw, 0.875rem);
  --font-size-lg: clamp(1rem, 3vw, 1.125rem);
  --font-size-xl: clamp(1.125rem, 4vw, 1.25rem);
  --font-size-xxl: clamp(1.25rem, 5vw, 1.5rem);

  // Spacing scale (responsive)
  --spacing-xs: clamp(0.25rem, 1vw, 0.5rem);
  --spacing-sm: clamp(0.5rem, 2vw, 0.75rem);
  --spacing-md: clamp(0.75rem, 3vw, 1rem);
  --spacing-lg: clamp(1rem, 4vw, 1.5rem);
  --spacing-xl: clamp(1.5rem, 5vw, 2rem);
  --spacing-xxl: clamp(2rem, 6vw, 3rem);
}

// =====================================================================================
// Responsive Mixins
// =====================================================================================

// Mobile-first media queries
@mixin mobile {
  @media (max-width: 599px) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: 600px) and (max-width: 959px) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: 960px) {
    @content;
  }
}

@mixin large-desktop {
  @media (min-width: 1264px) {
    @content;
  }
}

@mixin extra-large {
  @media (min-width: 1904px) {
    @content;
  }
}

// Specific breakpoint ranges
@mixin up($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: 0px) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: 600px) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: 960px) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: 1264px) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: 1904px) {
      @content;
    }
  }
}

@mixin down($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: 599px) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: 959px) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: 1263px) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: 1903px) {
      @content;
    }
  }
}

@mixin between($lower, $upper) {
  @if $lower == xs and $upper == sm {
    @media (max-width: 599px) {
      @content;
    }
  } @else if $lower == sm and $upper == md {
    @media (min-width: 600px) and (max-width: 959px) {
      @content;
    }
  } @else if $lower == md and $upper == lg {
    @media (min-width: 960px) and (max-width: 1263px) {
      @content;
    }
  } @else if $lower == lg and $upper == xl {
    @media (min-width: 1264px) and (max-width: 1903px) {
      @content;
    }
  }
}

// Container Queries (modern browsers)
@mixin container-up($size) {
  @container (min-width: #{$size}) {
    @content;
  }
}

@mixin container-down($size) {
  @container (max-width: #{$size}) {
    @content;
  }
}

// =====================================================================================
// Responsive Utility Classes
// =====================================================================================

// Container classes
.container-responsive {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--spacing-md);
  padding-right: var(--spacing-md);

  @include up(sm) {
    max-width: var(--container-max-width-sm);
  }

  @include up(md) {
    max-width: var(--container-max-width-md);
  }

  @include up(lg) {
    max-width: var(--container-max-width-lg);
  }

  @include up(xl) {
    max-width: var(--container-max-width-xl);
  }
}

// Responsive display classes
.d-mobile-none {
  @include mobile {
    display: none !important;
  }
}

.d-tablet-none {
  @include tablet {
    display: none !important;
  }
}

.d-desktop-none {
  @include desktop {
    display: none !important;
  }
}

.d-mobile-only {
  @include tablet {
    display: none !important;
  }
  @include desktop {
    display: none !important;
  }
}

.d-desktop-only {
  @include mobile {
    display: none !important;
  }
  @include tablet {
    display: none !important;
  }
}

// Responsive spacing classes
@each $breakpoint in xs, sm, md, lg, xl {
  @each $size, $value in (
    xs: var(--spacing-xs),
    sm: var(--spacing-sm),
    md: var(--spacing-md),
    lg: var(--spacing-lg),
    xl: var(--spacing-xl),
    xxl: var(--spacing-xxl)
  ) {
    @include up($breakpoint) {
      .p-#{$breakpoint}-#{$size} {
        padding: #{$value} !important;
      }
      .pt-#{$breakpoint}-#{$size} {
        padding-top: #{$value} !important;
      }
      .pb-#{$breakpoint}-#{$size} {
        padding-bottom: #{$value} !important;
      }
      .pl-#{$breakpoint}-#{$size} {
        padding-left: #{$value} !important;
      }
      .pr-#{$breakpoint}-#{$size} {
        padding-right: #{$value} !important;
      }
      .px-#{$breakpoint}-#{$size} {
        padding-left: #{$value} !important;
        padding-right: #{$value} !important;
      }
      .py-#{$breakpoint}-#{$size} {
        padding-top: #{$value} !important;
        padding-bottom: #{$value} !important;
      }
      
      .m-#{$breakpoint}-#{$size} {
        margin: #{$value} !important;
      }
      .mt-#{$breakpoint}-#{$size} {
        margin-top: #{$value} !important;
      }
      .mb-#{$breakpoint}-#{$size} {
        margin-bottom: #{$value} !important;
      }
      .ml-#{$breakpoint}-#{$size} {
        margin-left: #{$value} !important;
      }
      .mr-#{$breakpoint}-#{$size} {
        margin-right: #{$value} !important;
      }
      .mx-#{$breakpoint}-#{$size} {
        margin-left: #{$value} !important;
        margin-right: #{$value} !important;
      }
      .my-#{$breakpoint}-#{$size} {
        margin-top: #{$value} !important;
        margin-bottom: #{$value} !important;
      }
    }
  }
}

// Touch-friendly elements
.touch-target {
  min-height: var(--touch-target-min-size);
  min-width: var(--touch-target-min-size);
  padding: var(--touch-target-min-spacing);
}

// Responsive text alignment
@each $breakpoint in xs, sm, md, lg, xl {
  @include up($breakpoint) {
    .text-#{$breakpoint}-left {
      text-align: left !important;
    }
    .text-#{$breakpoint}-center {
      text-align: center !important;
    }
    .text-#{$breakpoint}-right {
      text-align: right !important;
    }
  }
}

// =====================================================================================
// Responsive Typography
// =====================================================================================

.text-responsive-xs {
  font-size: var(--font-size-sm);
}

.text-responsive-sm {
  font-size: var(--font-size-base);
}

.text-responsive-md {
  font-size: var(--font-size-lg);
}

.text-responsive-lg {
  font-size: var(--font-size-xl);
}

.text-responsive-xl {
  font-size: var(--font-size-xxl);
}

// =====================================================================================
// Cross-Browser Support
// =====================================================================================

// Modern CSS Grid with fallback
.grid-responsive {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: var(--spacing-md);

  // Fallback for older browsers
  @supports not (display: grid) {
    display: flex;
    flex-wrap: wrap;
    margin: calc(var(--spacing-md) * -0.5);

    > * {
      flex: 1 1 280px;
      margin: calc(var(--spacing-md) * 0.5);
    }
  }
}

// Flexbox with fallbacks
.flex-responsive {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-md);

  // Fallback for IE11
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    margin: calc(var(--spacing-md) * -0.5);

    > * {
      margin: calc(var(--spacing-md) * 0.5);
    }
  }
}

// Modern aspect ratio with fallback
.aspect-ratio-16-9 {
  aspect-ratio: 16 / 9;

  // Fallback for older browsers
  @supports not (aspect-ratio: 16 / 9) {
    position: relative;
    width: 100%;
    height: 0;
    padding-bottom: 56.25%; // 9/16 * 100%

    > * {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
}

.aspect-ratio-4-3 {
  aspect-ratio: 4 / 3;

  @supports not (aspect-ratio: 4 / 3) {
    position: relative;
    width: 100%;
    height: 0;
    padding-bottom: 75%; // 3/4 * 100%

    > * {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
}

// =====================================================================================
// Print Styles
// =====================================================================================

@media print {
  .no-print {
    display: none !important;
  }

  .print-only {
    display: block !important;
  }

  // Reset colors for print
  * {
    background: transparent !important;
    color: black !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }

  // Optimize typography for print
  body {
    font-size: 12pt;
    line-height: 1.4;
  }

  h1, h2, h3, h4, h5, h6 {
    page-break-after: avoid;
  }

  p, blockquote, ul, ol {
    page-break-inside: avoid;
  }

  img {
    max-width: 100% !important;
    page-break-inside: avoid;
  }

  // Page breaks
  .page-break-before {
    page-break-before: always;
  }

  .page-break-after {
    page-break-after: always;
  }

  .page-break-inside-avoid {
    page-break-inside: avoid;
  }
}

// =====================================================================================
// Reduced Motion Support
// =====================================================================================

@media (prefers-reduced-motion: reduce) {
  .motion-safe {
    animation: none !important;
    transition: none !important;
  }

  .motion-safe * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

// =====================================================================================
// High Contrast Support
// =====================================================================================

@media (prefers-contrast: high) {
  .contrast-enhanced {
    border: 2px solid currentColor !important;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .contrast-enhanced:focus {
    outline-color: currentColor !important;
  }
}
